name: Deployment # Workflow 이름
on:
  push: # release/*, demo, master Branch에 push 이벤트가 일어났을 때 실행
    branches:
      - release/*
      - demo
      - master

jobs:
  build-and-deploy:
    name: build & deploy
    runs-on: ubuntu-18.04 # Job 가상환경 인스턴스
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2 # 현재 repository 소스 받아오기

      - name: Set environment variables
        run: |
          echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Cache node modules # yarn.lock의 변경을 기준으로 node modules 캐싱
        uses: actions/cache@v2
        id: node-cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Create env file
        shell: bash
        run: |
          touch .env
          bash ./.github/workflows/scripts/env.sh

      - name: Build
        run: ./node_modules/.bin/env-cmd -f .env yarn build

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        shell: bash
        run: |
          bash ./.github/workflows/scripts/deploy.sh

      - name: CloudFront Invalidation
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}
        shell: bash
        run: |
          bash ./.github/workflows/scripts/invalidation.sh

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          job_name: build & deploy
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              text: "Deployment",
              attachments: [{
                author_name: "deploy-bot",
                color: "good",
                title: "CI Result",
                text: "test",
                fields: [
                  {
                    title: "Workflow",
                    value: ${process.env.AS_WORKFLOW},
                    short: true
                  },
                  {
                    title: "Repository",
                    value: ${process.env.AS_REPO},
                    short: true
                  },
                  {
                    title: "Branch",
                    value: ${process.env.AS_REF#refs/heads/},
                    short: true
                  },
                  {
                    title: "Took",
                    value: ${process.env.AS_TOOK},
                    short: true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled.
